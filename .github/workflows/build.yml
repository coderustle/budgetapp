name: Build template

on:
  workflow_call:
    inputs:
      image_name:
        default: 'budgetapp'
        required: false
        type: string
      environment:
        default: 'Development'
        required: false
        type: string
      settings:
        default: 'budgetapp.settings.dev'
        required: false
        type: string
      build_env:
        default: 'dev'
        required: false
        type: string
      target:
        default: 'development'
        required: false
        type: string
      tag:
        default: 'dev'
        required: false
        type: string
    secrets:
      DB_NAME:
        required: true
      DB_USER:
        required: true
      DB_PASS:
        required: true
      DB_HOST:
        required: true
      SECRET_KEY:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      DOCKERHUB_USERNAME:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: .
          target: ${{ inputs.target }}
          push: true
          build-args: |
            DB_NAME=${{ inputs.DB_NAME }}
            DB_HOST=${{ inputs.DB_HOST }}
            DB_PASS=${{ inputs.DB_PASS }}
            DB_USER=${{ inputs.DB_USER }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            ENVIRONMENT=${{ inputs.build_env }}
            DJANGO_SETTINGS_MODULE=${{ inputs.settings }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.image_name }}:${{ inputs.tag }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.image_name }}:${{ inputs.tag }}
          cache-to: type=inline
